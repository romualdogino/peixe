
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  image: 'image',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLogin: 'lastLogin',
  permissions: 'permissions'
};

exports.Prisma.TanqueScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  codigo_interno: 'codigo_interno',
  volume_m3: 'volume_m3',
  area_m2: 'area_m2',
  tipo: 'tipo',
  tipo_material: 'tipo_material',
  status: 'status',
  localizacao: 'localizacao',
  data_instalacao: 'data_instalacao',
  nivel_agua_cm: 'nivel_agua_cm',
  isActive: 'isActive',
  ciclo_atual_id: 'ciclo_atual_id'
};

exports.Prisma.CicloProducaoScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  especie: 'especie',
  origem_lote: 'origem_lote',
  data_inicio: 'data_inicio',
  data_fim: 'data_fim',
  quantidade_inicial: 'quantidade_inicial',
  quantidade_atual: 'quantidade_atual',
  peso_inicial_g: 'peso_inicial_g',
  peso_atual: 'peso_atual',
  mortes: 'mortes',
  alimentacao_total_kg: 'alimentacao_total_kg',
  custo_total: 'custo_total',
  data_prevista_saida: 'data_prevista_saida',
  status: 'status',
  observacoes: 'observacoes'
};

exports.Prisma.RegistroDiarioScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  data: 'data',
  turno: 'turno',
  temperatura_agua: 'temperatura_agua',
  quantidade_kg: 'quantidade_kg',
  fracionamento: 'fracionamento',
  tipo_racao: 'tipo_racao',
  racao_marca: 'racao_marca',
  racao_codigo: 'racao_codigo',
  sobras: 'sobras',
  mortalidade: 'mortalidade',
  causa_morte: 'causa_morte',
  horas_aeracao: 'horas_aeracao',
  observacoes: 'observacoes',
  eventos_adversos: 'eventos_adversos',
  responsavel_id: 'responsavel_id',
  isAutomatic: 'isAutomatic'
};

exports.Prisma.BiometriaScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  data_amostra: 'data_amostra',
  idade_lote_dias: 'idade_lote_dias',
  tamanho_amostra: 'tamanho_amostra',
  peso_total_kg: 'peso_total_kg',
  peso_minimo: 'peso_minimo',
  peso_maximo: 'peso_maximo',
  comprimento_medio_cm: 'comprimento_medio_cm',
  comprimento_minimo: 'comprimento_minimo',
  comprimento_maximo: 'comprimento_maximo',
  altura_minima: 'altura_minima',
  altura_maxima: 'altura_maxima',
  desvio_padrao_peso: 'desvio_padrao_peso',
  desvio_padrao_comprimento: 'desvio_padrao_comprimento',
  observacoes: 'observacoes',
  recomendacoes: 'recomendacoes',
  responsavel_id: 'responsavel_id'
};

exports.Prisma.QualidadeAguaScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  data_analise: 'data_analise',
  hora_coleta: 'hora_coleta',
  fonte_agua: 'fonte_agua',
  metodo_coleta: 'metodo_coleta',
  oxigenio_dissolvido: 'oxigenio_dissolvido',
  ph: 'ph',
  amonia: 'amonia',
  nitrito: 'nitrito',
  nitrato: 'nitrato',
  tds: 'tds',
  orp: 'orp',
  ec: 'ec',
  salppm: 'salppm',
  sal: 'sal',
  sg: 'sg',
  temperatura: 'temperatura',
  transparencia_cm: 'transparencia_cm',
  notas: 'notas',
  responsavel_id: 'responsavel_id'
};

exports.Prisma.RegistroSaudeScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  data_registro: 'data_registro',
  sintomas: 'sintomas',
  percentual_afetado: 'percentual_afetado',
  diagnostico: 'diagnostico',
  patologia_codigo: 'patologia_codigo',
  produto: 'produto',
  dosagem: 'dosagem',
  dias_tratamento: 'dias_tratamento',
  dias_carencia: 'dias_carencia',
  resultado: 'resultado',
  data_diagnostico: 'data_diagnostico',
  usuario_id: 'usuario_id'
};

exports.Prisma.ProdutoEstoqueScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  categoria: 'categoria',
  tipo: 'tipo',
  unidade_medida: 'unidade_medida',
  peso_por_unidade: 'peso_por_unidade',
  quantidade_unidades: 'quantidade_unidades',
  estoque_atual_kg: 'estoque_atual_kg',
  lote_numero: 'lote_numero',
  validade: 'validade',
  fornecedor: 'fornecedor',
  custo_unitario: 'custo_unitario',
  data_ultima_entrada: 'data_ultima_entrada',
  data_ultima_saida: 'data_ultima_saida'
};

exports.Prisma.MovimentacaoTanqueScalarFieldEnum = {
  id: 'id',
  tanque_id: 'tanque_id',
  tipo_movimentacao: 'tipo_movimentacao',
  motivo: 'motivo',
  data: 'data',
  quantidade: 'quantidade',
  peso_medio_g: 'peso_medio_g',
  notas: 'notas',
  usuario_id: 'usuario_id'
};

exports.Prisma.MovimentacaoRacaoScalarFieldEnum = {
  id: 'id',
  produto_id: 'produto_id',
  tipo_movimento: 'tipo_movimento',
  data: 'data',
  quantidade_kg: 'quantidade_kg',
  lote_id: 'lote_id',
  observacoes: 'observacoes',
  responsavel_id: 'responsavel_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  OPERADOR: 'OPERADOR',
  VETERINARIO: 'VETERINARIO',
  GESTOR: 'GESTOR'
};

exports.TipoTanque = exports.$Enums.TipoTanque = {
  CIRCULAR: 'CIRCULAR',
  ESCAVADO: 'ESCAVADO',
  RACETRACK: 'RACETRACK',
  QUADRADO: 'QUADRADO'
};

exports.StatusTanque = exports.$Enums.StatusTanque = {
  ATIVO: 'ATIVO',
  MANUTENCAO: 'MANUTENCAO',
  VAZIO: 'VAZIO',
  INATIVO: 'INATIVO'
};

exports.Turno = exports.$Enums.Turno = {
  MANHA: 'MANHA',
  TARDE: 'TARDE',
  NOITE: 'NOITE'
};

exports.MovTanqueTipo = exports.$Enums.MovTanqueTipo = {
  ENTRADA_LOTE: 'ENTRADA_LOTE',
  SAIDA_VENDA: 'SAIDA_VENDA',
  TRANSFERENCIA_SAIDA: 'TRANSFERENCIA_SAIDA',
  TRANSFERENCIA_ENTRADA: 'TRANSFERENCIA_ENTRADA'
};

exports.Prisma.ModelName = {
  User: 'User',
  Tanque: 'Tanque',
  CicloProducao: 'CicloProducao',
  RegistroDiario: 'RegistroDiario',
  Biometria: 'Biometria',
  QualidadeAgua: 'QualidadeAgua',
  RegistroSaude: 'RegistroSaude',
  ProdutoEstoque: 'ProdutoEstoque',
  MovimentacaoTanque: 'MovimentacaoTanque',
  MovimentacaoRacao: 'MovimentacaoRacao'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/workspaces/peixe/app/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/workspaces/peixe/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../app/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- ENUMS PARA MELHOR INTEGRIDADE DE DADOS (TIPAGEM R√çGIDA) ---\n\nenum Role {\n  ADMIN\n  OPERADOR\n  VETERINARIO\n  GESTOR\n}\n\nenum TipoTanque {\n  CIRCULAR\n  ESCAVADO\n  RACETRACK\n  QUADRADO\n}\n\nenum StatusTanque {\n  ATIVO\n  MANUTENCAO\n  VAZIO\n  INATIVO\n}\n\nenum Turno {\n  MANHA\n  TARDE\n  NOITE\n}\n\nenum MovTanqueTipo {\n  ENTRADA_LOTE\n  SAIDA_VENDA\n  TRANSFERENCIA_SAIDA\n  TRANSFERENCIA_ENTRADA\n}\n\n// --- FIM DOS ENUMS ---\n\nmodel User {\n  id          String    @id @default(uuid())\n  name        String\n  email       String    @unique\n  password    String\n  role        Role? // Tipo Enum\n  image       String?\n  isActive    Boolean   @default(true)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lastLogin   DateTime?\n  permissions String[]\n\n  responsavel_biometrias     Biometria[]          @relation(\"BiometriaResponsavel\")\n  responsavel_qualidadeagua  QualidadeAgua[]      @relation(\"QualidadeAguaResponsavel\")\n  responsavel_registrodiario RegistroDiario[]     @relation(\"RegistroDiarioResponsavel\")\n  responsavel_movtanque      MovimentacaoTanque[] @relation(\"MovTanqueResponsavel\")\n  responsavel_movracao       MovimentacaoRacao[]  @relation(\"MovRacaoResponsavel\")\n  responsavel_regsaude       RegistroSaude[]      @relation(\"RegSaudeResponsavel\")\n}\n\nmodel Tanque {\n  id                String               @id @default(uuid())\n  nome              String               @unique\n  codigo_interno    String?              @unique\n  volume_m3         Float\n  area_m2           Float?\n  tipo              TipoTanque // Tipo Enum\n  tipo_material     String?\n  status            StatusTanque         @default(ATIVO) // Tipo Enum\n  localizacao       String?\n  data_instalacao   DateTime?\n  nivel_agua_cm     Float?\n  isActive          Boolean              @default(true)\n  ciclo_atual_id    String?              @unique\n  ciclo_atual       CicloProducao?       @relation(\"CicloAtual\", fields: [ciclo_atual_id], references: [id])\n  ciclos            CicloProducao[]      @relation(\"HistoricoCiclos\")\n  registros_diarios RegistroDiario[]\n  biometrias        Biometria[]\n  qualidade_agua    QualidadeAgua[]\n  registros_saude   RegistroSaude[]\n  movimentacoes     MovimentacaoTanque[]\n\n  @@map(\"tanques\")\n}\n\nmodel CicloProducao {\n  id                   String    @id @default(uuid())\n  tanque_id            String\n  especie              String?\n  origem_lote          String?\n  data_inicio          DateTime\n  data_fim             DateTime?\n  quantidade_inicial   Int\n  quantidade_atual     Int?\n  peso_inicial_g       Float\n  peso_atual           Float?\n  mortes               Int?\n  alimentacao_total_kg Float?\n  custo_total          Float?\n  data_prevista_saida  DateTime?\n  status               String    @default(\"ativo\")\n  observacoes          String?\n  tanque_ciclo_ativo   Tanque?   @relation(\"CicloAtual\")\n  tanque               Tanque    @relation(\"HistoricoCiclos\", fields: [tanque_id], references: [id])\n\n  @@map(\"ciclos_producao\")\n}\n\nmodel RegistroDiario {\n  id               String   @id @default(uuid())\n  tanque_id        String\n  data             DateTime\n  turno            Turno? // Tipo Enum\n  temperatura_agua Float // Tornada obrigat√≥ria\n  quantidade_kg    Float?\n  fracionamento    Int?\n  tipo_racao       String?\n  racao_marca      String?\n  racao_codigo     String?\n  sobras           Boolean?\n  mortalidade      Int?\n  causa_morte      String?\n  horas_aeracao    Float?\n  observacoes      String?\n  eventos_adversos String?\n  responsavel_id   String?\n  isAutomatic      Boolean  @default(false)\n  tanque           Tanque   @relation(fields: [tanque_id], references: [id])\n  responsavel      User?    @relation(\"RegistroDiarioResponsavel\", fields: [responsavel_id], references: [id])\n\n  @@map(\"registros_diarios\")\n}\n\nmodel Biometria {\n  id                        String   @id @default(uuid())\n  tanque_id                 String\n  data_amostra              DateTime\n  idade_lote_dias           Int?\n  tamanho_amostra           Int\n  peso_total_kg             Float\n  peso_minimo               Float?\n  peso_maximo               Float?\n  comprimento_medio_cm      Float\n  comprimento_minimo        Float?\n  comprimento_maximo        Float?\n  altura_minima             Float?\n  altura_maxima             Float?\n  desvio_padrao_peso        Float?\n  desvio_padrao_comprimento Float?\n  observacoes               String?\n  recomendacoes             String?\n  responsavel_id            String?\n  tanque                    Tanque   @relation(fields: [tanque_id], references: [id])\n  responsavel               User?    @relation(\"BiometriaResponsavel\", fields: [responsavel_id], references: [id])\n\n  @@map(\"biometrias\")\n}\n\nmodel QualidadeAgua {\n  id                  String   @id @default(uuid())\n  tanque_id           String\n  data_analise        DateTime\n  hora_coleta         String?\n  fonte_agua          String?\n  metodo_coleta       String?\n  oxigenio_dissolvido Float // Campo OD mantido como Float\n  ph                  Float\n  amonia              Float\n  nitrito             Float\n  nitrato             Float?\n  tds                 Float?\n  orp                 Float?\n  ec                  Float?\n  salppm              Float?\n  sal                 Float?\n  sg                  Float?\n  temperatura         Float\n  transparencia_cm    Int\n  notas               String?\n  responsavel_id      String?\n  tanque              Tanque   @relation(fields: [tanque_id], references: [id])\n  responsavel         User?    @relation(\"QualidadeAguaResponsavel\", fields: [responsavel_id], references: [id])\n\n  @@map(\"qualidade_agua\")\n}\n\nmodel RegistroSaude {\n  id                 String    @id @default(uuid())\n  tanque_id          String\n  data_registro      DateTime\n  sintomas           String?\n  percentual_afetado Float?\n  diagnostico        String?\n  patologia_codigo   String?\n  produto            String?\n  dosagem            String?\n  dias_tratamento    Int?\n  dias_carencia      Int?\n  resultado          String?\n  data_diagnostico   DateTime?\n  usuario_id         String?\n  tanque             Tanque    @relation(fields: [tanque_id], references: [id])\n  responsavel        User?     @relation(\"RegSaudeResponsavel\", fields: [usuario_id], references: [id])\n\n  @@map(\"registros_saude\")\n}\n\nmodel ProdutoEstoque {\n  id                  String              @id @default(uuid())\n  nome                String              @unique\n  categoria           String?\n  tipo                String\n  unidade_medida      String\n  peso_por_unidade    Float\n  quantidade_unidades Int\n  estoque_atual_kg    Float               @default(0)\n  lote_numero         String?\n  validade            DateTime?\n  fornecedor          String?\n  custo_unitario      Float?\n  data_ultima_entrada DateTime?\n  data_ultima_saida   DateTime?\n  movimentacoes       MovimentacaoRacao[]\n\n  @@map(\"produtos_estoque\")\n}\n\nmodel MovimentacaoTanque {\n  id                String        @id @default(uuid())\n  tanque_id         String\n  tipo_movimentacao MovTanqueTipo // Tipo Enum\n  motivo            String?\n  data              DateTime\n  quantidade        Int\n  peso_medio_g      Float\n  notas             String?\n  usuario_id        String?\n  tanque            Tanque        @relation(fields: [tanque_id], references: [id])\n  responsavel       User?         @relation(\"MovTanqueResponsavel\", fields: [usuario_id], references: [id])\n\n  @@map(\"movimentacoes_tanque\")\n}\n\nmodel MovimentacaoRacao {\n  id             String         @id @default(uuid())\n  produto_id     String\n  tipo_movimento String\n  data           DateTime\n  quantidade_kg  Float\n  lote_id        String?\n  observacoes    String?\n  responsavel_id String?\n  produto        ProdutoEstoque @relation(fields: [produto_id], references: [id])\n  responsavel    User?          @relation(\"MovRacaoResponsavel\", fields: [responsavel_id], references: [id])\n\n  @@map(\"movimentacoes_racao\")\n}\n",
  "inlineSchemaHash": "cd49e223315d29be0bf187f4b266877ad5c860e477e68919dcb3220e69ad160d",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel_biometrias\",\"kind\":\"object\",\"type\":\"Biometria\",\"relationName\":\"BiometriaResponsavel\"},{\"name\":\"responsavel_qualidadeagua\",\"kind\":\"object\",\"type\":\"QualidadeAgua\",\"relationName\":\"QualidadeAguaResponsavel\"},{\"name\":\"responsavel_registrodiario\",\"kind\":\"object\",\"type\":\"RegistroDiario\",\"relationName\":\"RegistroDiarioResponsavel\"},{\"name\":\"responsavel_movtanque\",\"kind\":\"object\",\"type\":\"MovimentacaoTanque\",\"relationName\":\"MovTanqueResponsavel\"},{\"name\":\"responsavel_movracao\",\"kind\":\"object\",\"type\":\"MovimentacaoRacao\",\"relationName\":\"MovRacaoResponsavel\"},{\"name\":\"responsavel_regsaude\",\"kind\":\"object\",\"type\":\"RegistroSaude\",\"relationName\":\"RegSaudeResponsavel\"}],\"dbName\":null},\"Tanque\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codigo_interno\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"volume_m3\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"area_m2\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoTanque\"},{\"name\":\"tipo_material\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StatusTanque\"},{\"name\":\"localizacao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_instalacao\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nivel_agua_cm\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ciclo_atual_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ciclo_atual\",\"kind\":\"object\",\"type\":\"CicloProducao\",\"relationName\":\"CicloAtual\"},{\"name\":\"ciclos\",\"kind\":\"object\",\"type\":\"CicloProducao\",\"relationName\":\"HistoricoCiclos\"},{\"name\":\"registros_diarios\",\"kind\":\"object\",\"type\":\"RegistroDiario\",\"relationName\":\"RegistroDiarioToTanque\"},{\"name\":\"biometrias\",\"kind\":\"object\",\"type\":\"Biometria\",\"relationName\":\"BiometriaToTanque\"},{\"name\":\"qualidade_agua\",\"kind\":\"object\",\"type\":\"QualidadeAgua\",\"relationName\":\"QualidadeAguaToTanque\"},{\"name\":\"registros_saude\",\"kind\":\"object\",\"type\":\"RegistroSaude\",\"relationName\":\"RegistroSaudeToTanque\"},{\"name\":\"movimentacoes\",\"kind\":\"object\",\"type\":\"MovimentacaoTanque\",\"relationName\":\"MovimentacaoTanqueToTanque\"}],\"dbName\":\"tanques\"},\"CicloProducao\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"especie\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"origem_lote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_inicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data_fim\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantidade_inicial\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quantidade_atual\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"peso_inicial_g\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"peso_atual\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"mortes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alimentacao_total_kg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"custo_total\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"data_prevista_saida\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_ciclo_ativo\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"CicloAtual\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"HistoricoCiclos\"}],\"dbName\":\"ciclos_producao\"},\"RegistroDiario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"turno\",\"kind\":\"enum\",\"type\":\"Turno\"},{\"name\":\"temperatura_agua\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantidade_kg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"fracionamento\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tipo_racao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"racao_marca\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"racao_codigo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sobras\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mortalidade\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"causa_morte\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"horas_aeracao\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventos_adversos\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAutomatic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"RegistroDiarioToTanque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RegistroDiarioResponsavel\"}],\"dbName\":\"registros_diarios\"},\"Biometria\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_amostra\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"idade_lote_dias\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tamanho_amostra\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"peso_total_kg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"peso_minimo\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"peso_maximo\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"comprimento_medio_cm\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"comprimento_minimo\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"comprimento_maximo\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"altura_minima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"altura_maxima\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"desvio_padrao_peso\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"desvio_padrao_comprimento\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recomendacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"BiometriaToTanque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BiometriaResponsavel\"}],\"dbName\":\"biometrias\"},\"QualidadeAgua\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_analise\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hora_coleta\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fonte_agua\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metodo_coleta\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oxigenio_dissolvido\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ph\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"amonia\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"nitrito\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"nitrato\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tds\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"orp\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ec\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"salppm\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sal\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"sg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"temperatura\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"transparencia_cm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"QualidadeAguaToTanque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QualidadeAguaResponsavel\"}],\"dbName\":\"qualidade_agua\"},\"RegistroSaude\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_registro\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sintomas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"percentual_afetado\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"diagnostico\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patologia_codigo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"produto\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dosagem\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dias_tratamento\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dias_carencia\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"resultado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data_diagnostico\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usuario_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"RegistroSaudeToTanque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RegSaudeResponsavel\"}],\"dbName\":\"registros_saude\"},\"ProdutoEstoque\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"categoria\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unidade_medida\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"peso_por_unidade\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"quantidade_unidades\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estoque_atual_kg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lote_numero\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"validade\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fornecedor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"custo_unitario\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"data_ultima_entrada\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"data_ultima_saida\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"movimentacoes\",\"kind\":\"object\",\"type\":\"MovimentacaoRacao\",\"relationName\":\"MovimentacaoRacaoToProdutoEstoque\"}],\"dbName\":\"produtos_estoque\"},\"MovimentacaoTanque\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo_movimentacao\",\"kind\":\"enum\",\"type\":\"MovTanqueTipo\"},{\"name\":\"motivo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantidade\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"peso_medio_g\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"notas\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanque\",\"kind\":\"object\",\"type\":\"Tanque\",\"relationName\":\"MovimentacaoTanqueToTanque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MovTanqueResponsavel\"}],\"dbName\":\"movimentacoes_tanque\"},\"MovimentacaoRacao\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"produto_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo_movimento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"quantidade_kg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lote_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observacoes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"responsavel_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"produto\",\"kind\":\"object\",\"type\":\"ProdutoEstoque\",\"relationName\":\"MovimentacaoRacaoToProdutoEstoque\"},{\"name\":\"responsavel\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MovRacaoResponsavel\"}],\"dbName\":\"movimentacoes_racao\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

